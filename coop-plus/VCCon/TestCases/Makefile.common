mkfile_path := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))

###### Redefine the LLVM build directory (LLVM_HOME_OBJ) in myenv.mak (generated by VTint/configure.sh), 
###### to choose Clang
myenv=$(mkfile_path)/../myenv.mak
-include $(myenv)

### This is a workaround for SPECCPU/astar testcase, which doesn't support -std=c++11
working_dir = $(shell pwd)
-include $(working_dir)/Makefile.vt


CPP_FILES := $(wildcard *.cpp)
HDR_FILES := $(wildcard *.h)
OBJ_FILES := $(CPP_FILES:.cpp=.bc)
LL_FILES  := $(CPP_FILES:.cpp=.ll)


LLVM_HOME="$(mkfile_path)/../../"
LLVM_HOME_OBJ="$(mkfile_path)/../build-coop"

############################################################################
###########################  Extra Compiling Options ######################
############################################################################

#EXTRA_FLAGS = -v -fsanitize=coop-analyze -Xclang -fdump-verbose
EXTRA_FLAGS = -v -Xclang -fdump-verbose
#EXTRA_FLAGS = -v \
#							-Xclang -load -Xclang $(LLVM_HOME_OBJ)/lib/PrintVirtual.so \
#							-Xclang -plugin -Xclang print-virtual \
#							-Xclang -plugin-arg-print-virtual -Xclang print-virtual-callsite \
#							-Xclang -plugin-arg-print-virtual -Xclang print-virtual-fn \
#							-Xclang -plugin-arg-print-virtual -Xclang print-class-layout
#EXTRA_CXX_FLAGS = -stdlib=libc++

## some applications do not support c++11, please specify the FLAG_NO_STDC++11=yes  
## in a special file: Makefile.vt in the target working directory.
#ifeq ($(FLAG_NO_STDC++11), )
#EXTRA_CXX_FLAGS += -std=c++11
#endif

############################################################################
###########################  Final Options ######################
############################################################################

CC=$(LLVM_HOME_OBJ)/bin/clang
CXX=$(LLVM_HOME_OBJ)/bin/clang++
#AR=/usr/bin/ar
#NM=/usr/bin/nm
RANLIB=/bin/true
LLVM_DIS=$(LLVM_HOME_OBJ)/bin/llvm-dis

CFLAGS = $(EXTRA_FLAGS)
CXXFLAGS = $(CFLAGS) $(EXTRA_CXX_FLAGS) 

############################################################################
###############################  Build Rules  ##############################
############################################################################

all: exe

%.bc: %.cpp $(HDR_FILES)
	$(CXX) $(CXXFLAGS) -emit-llvm $< -c -o $@
	$(LLVM_DIS) $@ > $*.ll

exe: $(OBJ_FILES)
	$(CXX) $(CXXFLAGS) $^ -o exe
	mv /tmp/coop.out* .

clean:
	-rm -rf *.bc *.ll exe coop.out*
